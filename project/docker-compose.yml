services:
  flask_app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flask
    restart: always
    depends_on:
      - db
    environment:
      POSTGRESQL_USER: ${POSTGRESQL_USER}
      POSTGRESQL_PASSWORD: ${POSTGRESQL_PASSWORD}
      POSTGRESQL_DB: ${POSTGRESQL_DATABASE}
      POSTGRESQL_DATABASE_IP: db
      POSTGRESQL_DATABASE_PORT: 5432
    ports:
      - "5000:5000"
    networks:
      - mynetwork
    env_file:
      - .env
    command: [ "/wait-for-postgres.sh", "db", "gunicorn", "--bind", "0.0.0.0:5000", "main:app" ]

  db:
    image: postgres:15
    platform: linux/amd64
    container_name: postgresql_db
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRESQL_DATABASE}
      POSTGRES_USER: ${POSTGRESQL_USER}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD}
    ports:
      - "5432:5432"
    networks:
      - mynetwork
    volumes:
      - postgresql_data:/var/lib/postgresql/data

networks:
  mynetwork:
    driver: bridge

volumes:
  postgresql_data:
